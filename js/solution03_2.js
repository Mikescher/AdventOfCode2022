/* Generated by the Nim Compiler v1.6.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI469762224 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI469762091 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762094 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI469762078 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI603980256 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI452985127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
NTI452985127.base = NTI33554439;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
NTI603980256.base = NTI33554439;
NTI469762078.base = NTI33554439;
NTI469762088.base = NTI469762078;
NTI469762091.base = NTI33554439;
NTI469762094.base = NTI469762091;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
NTI469762224.base = NTI33554438;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}
var ConstSet2 = setConstr(13, 10);

function nimMax(a_33556998, b_33556999) {
    var Temporary1;

  var result_33557000 = 0;

  BeforeRet: do {
    if ((b_33556999 <= a_33556998)) {
    Temporary1 = a_33556998;
    }
    else {
    Temporary1 = b_33556999;
    }
    
    result_33557000 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557000;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}

function absInt(a_33556988) {
    var Temporary1;

  var result_33556989 = 0;

    if ((a_33556988 < 0)) {
    Temporary1 = (a_33556988 * -1);
    }
    else {
    Temporary1 = a_33556988;
    }
    
    result_33556989 = Temporary1;

  return result_33556989;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}


function newSeq_452985301(len_452985303) {
  var result_452985304 = [];

    result_452985304 = new Array(len_452985303); for (var i = 0 ; i < len_452985303 ; ++i) { result_452985304[i] = []; }
  return result_452985304;

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469762415 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762415 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469762415;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_469762415 = addInt(i_469762415, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function filter_469762059(s_469762061, pred_469762063) {
  var result_469762064 = [];

    result_469762064 = nimCopy(null, newSeq_452985301(0), NTI452985127);
    Label1: do {
      var i_469762075 = 0;
      var colontmp__469762408 = 0;
      colontmp__469762408 = (s_469762061).length;
      var i_469762409 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762409 < colontmp__469762408)) break Label3;
            i_469762075 = i_469762409;
            if (pred_469762063(s_469762061[chckIndx(i_469762075, 0, (s_469762061).length - 1)])) {
            var Temporary4 = nimCopy(null, s_469762061[chckIndx(i_469762075, 0, (s_469762061).length - 1)], NTI33554439);
            result_469762064.push(Temporary4);;
            }
            
            i_469762409 = addInt(i_469762409, 1);
          }
      } while (false);
    } while (false);

  return result_469762064;

}

function substr_33557906(s_33557907, first_33557908, last_33557909) {
  var result_33557910 = [];

    var first_33557911 = nimMax(first_33557908, 0);
    var L_33557912 = nimMax(addInt(subInt(nimMin(last_33557909, (s_33557907).length - 1), first_33557911), 1), 0);
    result_33557910 = nimCopy(null, mnewString(chckRange(L_33557912, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557917 = 0;
      var colontmp__469762428 = 0;
      colontmp__469762428 = subInt(L_33557912, 1);
      var res_469762429 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762429 <= colontmp__469762428)) break Label3;
            i_33557917 = res_469762429;
            result_33557910[chckIndx(i_33557917, 0, (result_33557910).length - 1)] = s_33557907[chckIndx(addInt(i_33557917, first_33557911), 0, (s_33557907).length - 1)];
            res_469762429 = addInt(res_469762429, 1);
          }
      } while (false);
    } while (false);

  return result_33557910;

}

function nsuSplitLines(s_603980402, keepEol_603980403) {
            var Temporary6;

  var result_603980404 = [];

    result_603980404 = nimCopy(null, [], NTI603980256);
    Label1: do {
      var xHEX60gensym76_603980410 = [];
      var first_469762422 = 0;
      var last_469762423 = 0;
      var eolpos_469762424 = 0;
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((last_469762423 < (s_603980402).length) && !((ConstSet2[s_603980402[chckIndx(last_469762423, 0, (s_603980402).length - 1)]] != undefined)))) break Label5;
                  last_469762423 = addInt(last_469762423, 1);
                }
            } while (false);
            eolpos_469762424 = last_469762423;
            if ((last_469762423 < (s_603980402).length)) {
            if ((s_603980402[chckIndx(last_469762423, 0, (s_603980402).length - 1)] == 10)) {
            last_469762423 = addInt(last_469762423, 1);
            }
            else {
            if ((s_603980402[chckIndx(last_469762423, 0, (s_603980402).length - 1)] == 13)) {
            last_469762423 = addInt(last_469762423, 1);
            if (((last_469762423 < (s_603980402).length) && (s_603980402[chckIndx(last_469762423, 0, (s_603980402).length - 1)] == 10))) {
            last_469762423 = addInt(last_469762423, 1);
            }
            
            }
            }
            }
            
            if (keepEol_603980403) {
            Temporary6 = subInt(last_469762423, 1);
            }
            else {
            Temporary6 = subInt(eolpos_469762424, 1);
            }
            
            xHEX60gensym76_603980410 = substr_33557906(s_603980402, first_469762422, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym76_603980410, NTI33554439);
            result_603980404.push(Temporary7);;
            if ((eolpos_469762424 == last_469762423)) {
            break Label2;
            }
            
            first_469762422 = last_469762423;
          }
      } while (false);
    } while (false);

  return result_603980404;

}

function newSeq_469762094(len_469762096) {
  var result_469762097 = [];

    result_469762097 = new Array(len_469762096); for (var i = 0 ; i < len_469762096 ; ++i) { result_469762097[i] = []; }
  return result_469762097;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function distribute_469762084(s_469762086, num_469762087, spread_469762088) {
  var result_469762089 = [];

  BeforeRet: do {
    if ((num_469762087 < 2)) {
    result_469762089 = nimCopy(null, [nimCopy(null, s_469762086, NTI469762078)], NTI469762088);
    break BeforeRet;
    }
    
    result_469762089 = nimCopy(null, newSeq_469762094(num_469762087), NTI469762094);
    var stride_469762114 = divInt((s_469762086).length, num_469762087);
    var first_469762115 = 0;
    var last_469762116 = 0;
    var extra_469762120 = modInt((s_469762086).length, num_469762087);
    if (((extra_469762120 == 0) || (spread_469762088 == false))) {
    if ((0 < extra_469762120)) {
    stride_469762114 = addInt(stride_469762114, 1);
    }
    
    Label1: do {
      var i_469762129 = 0;
      var colontmp__469762436 = 0;
      colontmp__469762436 = num_469762087;
      var i_469762437 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762437 < colontmp__469762436)) break Label3;
            i_469762129 = i_469762437;
            result_469762089[chckIndx(i_469762129, 0, (result_469762089).length - 1)] = nimCopy(null, newSeq_452985301(0), NTI452985127);
            Label4: do {
              var g_469762140 = 0;
              var colontmp__469762433 = 0;
              colontmp__469762433 = nimMin((s_469762086).length, addInt(first_469762115, stride_469762114));
              var i_469762434 = first_469762115;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_469762434 < colontmp__469762433)) break Label6;
                    g_469762140 = i_469762434;
                    var Temporary7 = nimCopy(null, s_469762086[chckIndx(g_469762140, 0, (s_469762086).length - 1)], NTI33554439);
                    result_469762089[chckIndx(i_469762129, 0, (result_469762089).length - 1)].push(Temporary7);;
                    i_469762434 = addInt(i_469762434, 1);
                  }
              } while (false);
            } while (false);
            first_469762115 = addInt(first_469762115, stride_469762114);
            i_469762437 = addInt(i_469762437, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      Label8: do {
        var i_469762153 = 0;
        var colontmp__469762443 = 0;
        colontmp__469762443 = num_469762087;
        var i_469762444 = 0;
        Label9: do {
            Label10: while (true) {
            if (!(i_469762444 < colontmp__469762443)) break Label10;
              i_469762153 = i_469762444;
              last_469762116 = addInt(first_469762115, stride_469762114);
              if ((0 < extra_469762120)) {
              extra_469762120 = subInt(extra_469762120, 1);
              last_469762116 = addInt(last_469762116, 1);
              }
              
              result_469762089[chckIndx(i_469762153, 0, (result_469762089).length - 1)] = nimCopy(null, newSeq_452985301(0), NTI452985127);
              Label11: do {
                var g_469762169 = 0;
                var i_469762441 = first_469762115;
                Label12: do {
                    Label13: while (true) {
                    if (!(i_469762441 < last_469762116)) break Label13;
                      g_469762169 = i_469762441;
                      var Temporary14 = nimCopy(null, s_469762086[chckIndx(g_469762169, 0, (s_469762086).length - 1)], NTI33554439);
                      result_469762089[chckIndx(i_469762153, 0, (result_469762089).length - 1)].push(Temporary14);;
                      i_469762441 = addInt(i_469762441, 1);
                    }
                } while (false);
              } while (false);
              first_469762115 = last_469762116;
              i_469762444 = addInt(i_469762444, 1);
            }
        } while (false);
      } while (false);
    }
    
  } while (false);

  return result_469762089;

}

function toFloat_33556001(i_33556002) {
  var result_33556003 = 0.0;

    result_33556003 = i_33556002;

  return result_33556003;

}

function HEX2F_33557575(x_33557576, y_33557577) {
  var result_33557578 = 0.0;

    result_33557578 = (toFloat_33556001(x_33557576) / toFloat_33556001(y_33557577));

  return result_33557578;

}

function newSeq_469762273(len_469762275) {
  var result_469762276 = [];

    result_469762276 = new Array(len_469762275); for (var i = 0 ; i < len_469762275 ; ++i) { result_469762276[i] = 0; }
  return result_469762276;

}

function filter_469762330(s_469762332, pred_469762334) {
  var result_469762335 = [];

    result_469762335 = nimCopy(null, newSeq_469762273(0), NTI469762224);
    Label1: do {
      var i_469762346 = 0;
      var colontmp__469762447 = 0;
      colontmp__469762447 = (s_469762332).length;
      var i_469762448 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762448 < colontmp__469762447)) break Label3;
            i_469762346 = i_469762448;
            if (pred_469762334(s_469762332[chckIndx(i_469762346, 0, (s_469762332).length - 1)])) {
            result_469762335.push(s_469762332[chckIndx(i_469762346, 0, (s_469762332).length - 1)]);;
            }
            
            i_469762448 = addInt(i_469762448, 1);
          }
      } while (false);
    } while (false);

  return result_469762335;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function find_469762295(a_469762298, item_469762299) {
  var result_469762300 = 0;

  BeforeRet: do {
    result_469762300 = 0;
    Label1: do {
      var i_469762312 = 0;
      var i_469762452 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762452 < (a_469762298).length)) break Label3;
            i_469762312 = a_469762298[chckIndx(i_469762452, 0, (a_469762298).length - 1)];
            if ((i_469762312 == item_469762299)) {
            break BeforeRet;
            }
            
            result_469762300 = addInt(result_469762300, 1);
            i_469762452 = addInt(i_469762452, 1);
          }
      } while (false);
    } while (false);
    result_469762300 = -1;
  } while (false);

  return result_469762300;

}

function contains_469762290(a_469762292, item_469762293) {
  var result_469762294 = false;

  BeforeRet: do {
    result_469762294 = (0 <= find_469762295(a_469762292, item_469762293));
    break BeforeRet;
  } while (false);

  return result_469762294;

}

function nsuIntToStr(x_603980565, minchars_603980566) {
  var result_603980567 = [];

    result_603980567 = nimCopy(null, HEX24_335544323(absInt(x_603980565)), NTI33554439);
    Label1: do {
      var i_603980572 = 0;
      var colontmp__469762455 = 0;
      colontmp__469762455 = subInt(minchars_603980566, (result_603980567).length);
      var res_469762456 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762456 <= colontmp__469762455)) break Label3;
            i_603980572 = res_469762456;
            result_603980567 = nimCopy(null, [48].concat(result_603980567 || []), NTI33554439);
            res_469762456 = addInt(res_469762456, 1);
          }
      } while (false);
    } while (false);
    if ((x_603980565 < 0)) {
    result_603980567 = nimCopy(null, [45].concat(result_603980567 || []), NTI33554439);
    }
    

  return result_603980567;

}

function run03_2_469762051() {
    
function HEX3Aanonymous_469762055(p_469762056) {
      var result_469762057 = false;

        result_469762057 = !(eqStrings(p_469762056, []));

      return result_469762057;

    }
            
function HEX3Aanonymous_469762287(p_469762288) {
              var result_469762289 = false;

                result_469762289 = (contains_469762290(line2_469762206, p_469762288) && contains_469762290(line3_469762207, p_469762288));

              return result_469762289;

            }
            var Temporary8;
            var Temporary9;

  var result_469762052 = [];

  BeforeRet: do {
    var res_469762054 = 0;
    var lines_469762080 = filter_469762059(nsuSplitLines(makeNimstrLit("BdbzzddChsWrRFbzBrszbhWMLNJHLLLLHZtSLglFNZHLJH\x0AnnfMwqpQTMffHlNNLllHnZSS\x0AcGpcMwfppfqcjcTCBBzWDsDbDrjzWz\x0ALhfjhcdjcGdhFfdGfdjdvwCCZMvvLvWwMLCLSwZC\x0ArDnsbmptPmlbQMCrQWQQBZQW\x0AgltgVPngDPbptPsbPzVgmDldfTdfczThjJJjfMcJdFHjjH\x0AdGlgDflTLLLrRLTLVdQLcQMnbvHbbFzNNvMbnHHn\x0AsZjWJJCSjWqfCqSjSmJSbFvCzBMBBzHncHNvMBHN\x0AtwqqwpZwfrlwRwDGDR\x0AzCGGFTQMQrsNRNGZdR\x0AcLLQgPDpgcgmvPRHrwBdvrNZ\x0AglWpmJWQDcJpQnpjSmbhFtMnqFfCVTCFCFFM\x0AzNZWFNZBFrGTdBcZZBdJTrGrmgvppgDHwHmgVHCHCvCPDjzC\x0AqtqqPnLSfLwvjvvgvvqH\x0AMtbLLLQbRfPRfnbnnLMtnsbdBNsrGWNWcNcTBWZrrcrWcJ\x0AsZwstbbDVlHtbhcrhhZLrRpNQN\x0AjqGjjFjWnzWGgqWjJJNphnLMRhLhcrhcrSLN\x0AqCJzFJdvmHvbtpbb\x0AZSRsvvQvZpsRQGJghClPCwGPChCP\x0AFVdMLDdtDRdDcBtmcVFntwgJJTlnNPwJnlTlwlTPgN\x0AVqttMWFmDbjbzrSWRQ\x0ATsDSBcwshdwSCrgRWZBvgGRG\x0ALPVJLqqJbbzpFqwpbvgGRmZPrmZgCvCCfr\x0AtzJlJzQllFLqtwHhjNSdtthjDhTN\x0AfsDLDDnwvnSdqLSsFSDfsLpbgVttPMpPNjMWVMNfpjgW\x0AjhHmBmlrTBBHRPVtMZbppNPPZB\x0AJmTTrTmjRTJqSQQSFqQw\x0AHPzZFgPFMCHJCcZMcDQGwpLqPLqppwhGvv\x0ABrWRqbqRsTSTqNddrVrthLQVwnpwphnvnDnGvGDn\x0AtSbBfsRbTfqjJqjCqm\x0ApCqrqzmqZzrmCCvCJwJPBRwJBWBmwWBJ\x0AVqbqbjFLFfSHnfctBwDdDFTwtRRTDF\x0ALVcnbjHLSqHnhbSGGppCMMZMphpNrQ\x0APhTcTPsSPCMvvhhMRPttbNWfNsWFNfWWtpNw\x0ArdQrDbJBVVjrBVdLjHHHWNWwfHtzzNtFpZZptppg\x0AJJVGGdddjDjDJmdjGqqRSbPMTvcRlqnnMlvT\x0ASqGfTrBlSrrrfGGQvCnqZhZmPPhvJh\x0ALdVNwgsjdjHmjWwDsDpwsHWtnCnQQQQNnvCnbJZQbNbtZZ\x0ADjssDHLLVppDssdLspswFLVjzfFMTfSBcTRcrFSBzBTzmGzr\x0AJSJJqlldpJlcdVWMlgMJrcCjrhzHCwTjHrQzwTzZ\x0AbBvsGBGNFDNRFNFBRDPsDDHCChhhrZRQQzhjhCjTzWCr\x0AFvbLFGDDtWDFBnPGFDWGqJMgJpSdVStllttlppVS\x0AclpBdBQBsqGpQbVdqTTWRTSFgLLggffg\x0ANzvwmHvZtZZgbDSCLDmfmm\x0AjPJjthHzNwPvvjwjNzPzztZBlrccpbVGBQhlGBVlrpnpBs\x0ANmFFGlGmzCrNWHvFmFWCFvQPTdDDlbbdgJPtgbbdPDcc\x0ARwfBqLwZqffqnPbdDgVQDdtRbT\x0AhnptqLMMLwqjMMjzSzHmhvNNrvvhhz\x0AhqVrDdPdVDqjsDrjjqsfrrWlctvHJNLfvNcLHNNZRNZHvfZL\x0ACSnWQSGBBSnmBnTmSbQbNZZMJNJMccGNHLZNNvNv\x0AgFnmBmBnTCpwmBbgWVqjPsrsjplVrjlqPr\x0AvgVgJJCphzFjzbwljwww\x0APWmfDgrPrPWlSWqSWlSZ\x0ArrTHQTGTPHDDHgPrcrcPmDPhdtGvnvNnttJCdJhtGVnpdM\x0ADDDhNgWNLWgDqDgtgtwSngjVSQdf\x0AcvFrcGmBrrrCdSfSJQ\x0AmBHzFFvFzmsBspsFsZqhqbWlWdPDlLHbqZ\x0ATLNpGpRzwGQLLQRTwdvWdWbdbgdBlblb\x0AFJDVzZzHfZHVzcHgnvHnvngvvc\x0AMzDVSmZPPrqhGmCqQqLR\x0AmqHWcBHVcgsbhhnTrrTg\x0AfWftGtfJpwJMSdFDLFSGDGFnnNrbrhTNsZnrhTswZZnnsb\x0AdSftppdSFStLDpQfLjWHQvWBmmqVjCqcVv\x0AfrfNzgvzzzJwJqpRcP\x0AVdVSnGnHqhDDTdqhdLWmjMTmjMPjPmTsmsmjmR\x0ABdGLSWtBSWDtVqdSDVGqtSSHFZFZtQbZlZfNgFffrgNrvgrl\x0AjBVSjsJcLcqqjtgcmRFRNFFzFm\x0ACnHnWQQGGWnnCnfvCTmZRZgNtfZtNDZPtNDtzl\x0AmWWGGdmQQWwrHHMBBBhrBVqshBLBSL\x0AcLtFcllvrslGLcLHVzDZQzzpznWzQtQZ\x0ATmShfSSPJRRBBfSgmdfBJhDNVpGzVZpzQgZgbWzpnDGp\x0ABhJPfSqdhqJRdBdPqTJBChvrFlHvvCGCccHsMscvrHvv\x0AzfddZTpZLzLDfLtDCttdTfZPnlcPcnhjPDnlcjMchDPjnP\x0AMQsFvFHJsQvmNvvswljgbPbwlwjnmcch\x0AVFVqvqFQHqVJRVCBLpqTGMzCqtMZ\x0APZdVgNdQQcdcZQtGhnHtBlvlvWTnbBHWWH\x0ACDJmzqFmMmLfqmzFwqfzfwMRvpRbTWBBWDnlnbnWnTNTnB\x0AzFfffjCqwLJCfrCFjCLCzCMsjSZjQNPhQGVSQQZhsGjGgd\x0AnbHntnqPQwTHwQVC\x0ABzfSZSpcBZpzpPhSBjRTCBWTTRWTTTWR\x0ApvZpzPzNfhddJGmmNnJb\x0AGwTgWlvbgTwMrbwTrlWvwtHBNtNvBhBtdZcShHDtNS\x0APnndmnCmnJFnsmRdmFnnZDhRRScRQQHDtDNtcDQS\x0ACLffLsmqqpJljVdlpMpWlr\x0AdPCzBLTSLqmqdSCsmrTDVQjZfjfVVZnZhhhLGQ\x0AwwFpgvPJNwgPPwvZGnQhbZQQFfQZbf\x0AWvRwwJpHHgpNMNqdTdCdqrmHBPtm\x0ADbWwjSGFSFfwGfCwDSSPPjLhgrrLWRJRgggJphLzpJLq\x0AlQTnMHdcQBvlHMMZBcHHTrbzpdzgqrpLdqzzVRVRVV\x0AvlvlNlBQvBZTQBnHnQTTBBPwPNCCsfSFmbSFfmGPwFmj\x0AhGGQtbVjhRqlmqqrmDlpmw\x0AgPMZsMgdssCPPsvrgZcTZTPSnnLLnBWDwLmwWwBnmWSnWNWB\x0ATsvgMPdcgCfMdcsZJRQhVfVRVQFFQGtr\x0ANfpFTTpFNbpZMRFrJMMMCv\x0AdWJPngDWBtPVBdPVGHZzCGHZrrvZRSMSzv\x0AWDDDVDPlWnLBVgnsgJmQJNqThNmbjlqbbh\x0AvnznqvfrzzVzrvvnfVqztBtGbMCdGmCcdccJccCLCcpSSgcL\x0ARQsDsljDlhssWshHhlhsHTlLbgJLpmgbbcMSpSSbcSJgjd\x0AWswhhHWlRTsQDwWHTRhsvNVvwqzfVmNBtZNmnzzq\x0AcjcPfLlQtPsZQlfHZJqVSFdVwmSRRqSSddwDvF\x0AMgNbBgzgnwdPRFmSPn\x0ACMGbNNMhCMzzPzBpTNPGBclLcLfsptHQfQlZssLcLf\x0AslsdfpSlllpTVJJGgGDgHMdV\x0AwrBQrbQrhQcpbQrhLwRBrjVVgGGPgZMtZMVhgMPMGHPg\x0AQQwRnrwRbbRcmQmrjRnjpvNsNTNSlTmsTqCSvsNSWz\x0AGWNwppdHdpmzgPFPCRmlCBPB\x0AbSrJhJSsMhrJMDPRCPBlwVCtVSLV\x0AQbsbwqQZvrJhhQrhZZrhchTfnTWGNvWpNnjHGvGjNdGT\x0ANMZGmnMBWmwmNnGwHrHvHzfrvrVVVj\x0ApSbDRLgbpJDPpRZRQjjFqVhhDFjDVqfrzv\x0AsQQscLTZcsTpRsBnmlBcdCMBMtlc\x0AhwWslbGWbRvLZvcscZ\x0AgQnmmrNTmSnTfgwDwVwpJvJPJzLqLJTLLvRcZz\x0AmrmnSrDNNQSmmwdggrrDbHMGhtdtGhGlhtClMGhM\x0AqQdlGcvDQDQvDdmtPmmmlStbjSrm\x0ACpNhzWTCTRznBMvwtTjMrHtSvj\x0AnWzsfZCsBhNpZLgGdQDddvqd\x0AggjTjJWDVVVRTwQcZWvchshWhs\x0ALmFfLfSmBtCttNLfCFBPFNBvvvhrcQdvsrsdSwdqcwrwSw\x0ACHttltmlPLMHRTgJQDgRDTMb\x0ARPJgCdhgPPSzvWDcCfGHDcvf\x0AHbrrwBspTwWDDnqbZjjD\x0ArQrFsrsstQMQHJdHQm\x0AGVwQVGBZBNQwsjdNcMMlgJNPgj\x0ASWFfSzTCSWFCSpgnJLSjpMdc\x0AFhTbvrzrMrDCVHsVsHGBtHwv\x0AFsqjjVzFVWFqRRWBssdpNSBHwJpHHJJdddSN\x0AlQgmhvbTcgTgfhTQhSCFCGJHSlwNtJdGHG\x0AvgZPbbfMhbTmchhjRFRnsDRPWVqzWz\x0AcvwfjjcJjqhctvSpCgCFVhrFCrpC\x0AmRsQmsMlNNzznWQlRnsMRQlSCpLNbpwSSSrwFLDFLLLgFp\x0AzznlnGlmRmMlPZnGQzMszMRfccTjcBJjtJtJjqTZtfwBTt\x0APtCwCCVqbjNNqqvGssPmHGsHMfPH\x0AdcddcWFDJJJcLczhWQdcDScZvHZgpGfsvMfSmsggSvvnvM\x0ATTQmTDhdQQzdRwjBVrRwCwBbBr\x0ABnBsFHCrcnBrMBPSmMSCmrcFqnZLddLhdhdGLvqLqgqnLJJp\x0AWfjTlNVDTtjzNWTlVMWNlTwTJphdgpvJLGLdgghZvGLpwddq\x0AzVjbVblVDlNTlbzTzDjllDTzHmHCsmcMHcSBrCBbrHBcBPSC\x0AddlcGQlCjQNGQmPLslZTlmTtfT\x0AMDzMwSwqpzpDRpWRJwgZhttrZmTPfZmrmtrMZZ\x0AJSqRBpJzwgDDpqDqvpBRdCjbCjQCFCbHvdGPjdHQ\x0AbwzPwGLZMsbJMPPLGLMQzbhhQRvWWtVqVhgCVtWWQDqt\x0AHddrHFnFNpVnVLhnvLRV\x0ANLdrFjHTBrrdjFSpFmNBmSfZMwZMJJfSffbwzwPbczbJ\x0AQTWSzTTLwTfwflSNJRdvGlRGcNgJBl\x0AFnmmqrqbBBgRbHGc\x0AMFZqrCVCqmZCprspFZmnnMsDfzWzDwSfjSwPQPTLhffwBLwj\x0AnpfgFRTZRRnDZLdgRfRrrjcWzGpWGGGQrjjWpP\x0AvblVbvSShhVzHWjzzlrPWG\x0AbVwqvCBtShqBhCCtqhNqCJRTTBDFJJLnJgDRWFBnWg\x0AnHDNQvgvnNZHDnsGcjfNTrTfVrfL\x0ASRWFSBRLtSFqjTrVVcsVjTSG\x0ABdBbRttWBdbdWdbppmZlLmgwHvgQvgLZ\x0APQRZlpDDptQSclBMGVBdhVFGBMpf\x0AnnrsTCWjLJsnsSMShhGJfwffwV\x0AvjzqsjqgSHbbtvHZ\x0ADgFmbdSDZbPgLbDDmFwZwgLSfccGcGvnvvngsGGnsGMNWsWs\x0AHqztHHhHVhHjhRRhJtCVBCfNprMWpcMMJfsvvMsGscpG\x0AtjVtBVTBtHHqCRqtzQwTPSNdSwPTTbPFDdml\x0AsbmBmHZbRRRmwBmsSjHzRjmSCNFLNLLQNQhFgtQLzNztlrff\x0AMpqPPDPVnGqrJpcqqJpMVlgtlLFLChCgChCCQgCtCD\x0AVdcVVJvdrVWHbwHWBSSBRb\x0AtPDVBzzNSNdDSQpMQMTQJMMQMN\x0ALqSWSmbsmfQTTGZMWGCW\x0AcLjLcbrjqmvfqLbfmqLwDBBzSHPzlwzcdBlnnP\x0ASbnHrGHSrrhHJBrrScDfcPDMfpPGcGcpDL\x0AQTpmpmmQWlZsTvVQDMgggFLgFcPf\x0AzsCNlltCslzlTNsNlShwdJCpSqdHrBhpwr\x0AJZmFrmLGjFZdDGrrVTvzmPVvRRVzwzzl\x0AWBnfMDBqMsgDBqpBvzwVlCwRTRRPpvlw\x0AWfghfttggfSnnqbDftfqSBBDQdHhZFFJrrHFjGJdGjFrjQLj\x0ArNLRjrlVlrFRJzlsjrVlRFGCmnMtftgCNDDgDmCfqNgPNM\x0ASpdBpdHbpHWhZqnCdtCGggqCPn\x0AQHHvvWwWhwVVQRscVzGl\x0AQffLtMQGMQfDMMwMTJwqWHvH\x0AnSSFznjFcfjTgVJTJjvT\x0ARrBpcfSNpRBcFshrCtQrDGLPQb\x0AGctcMldStGwPPbcLsQTV\x0AjhnzDgnHnnfPVwHQTTLTds\x0AgBgzDDhzvqdGGvrtdvtm\x0APPwRWVTvRvPVLwRpMlzmbmsbHWjbbs\x0AdFTFCNfdjzjFjsMF\x0ASgdffSTrnnqCgdqgcNrfSZqVvVLRDPJZQwJBLPQPtLZwJJ\x0AHSzDQftHphTBHFhr\x0AWMmJsMJNLWNPmmsncjMJcjtvwggVvhFFFhjrVwrjrjppvT\x0AWWPsJJCWCtZZZRGC\x0ASfFZQDRLgpLlRgQRRRFWTsbhBhgTjbWBjhshgw\x0AtHVNGjtzzHvMMJJhrWJNrTrPbP\x0AjvVVvGCGtCmjHtdHzQQfDpSSlDRnFfQFmR\x0AZBBPfVVPPrVmrWZJzNdPznbnbSzznP\x0AgvgpGqFFMgMcGgwLwGpcJNZSTZbdbdzNNSlqbTnn\x0AssZLgsMLQvcFpVrhCsmtWHjrrW\x0AnFvhRnWWzBRPHQqcqqCqmFbd\x0ASJDJgVprLfDfbJmHmWWHQtJW\x0AwVsgWVSTgLjfSsVjVBRvRNwwGGRhNZhRMZ\x0AwTRrRBCTPTBPlgMqgHCqggHLgg\x0AdmDzpQpBdmWmWzzzDFzjGNMSWLSgLVGGLVNSLgSg\x0AJbFdmQQJpjpptQbdJJmDmdtnZhZRflTlnTrTlrhBwPPc\x0AjwSwssQbwbStlhRgtsVstn\x0AzPzFdFFZccPDgntzVHHgghRz\x0AvVVdfFmZPDMWZZBmGQbwJJGCLwwMwJCS\x0APLLffLFqqNLwSffbnVzzRf\x0AlsmgTggChrgDtZsZVblMVJMznVnwMBnb\x0AhDZZTmZvhTgstvwNFdqpWQcqvP\x0AmmWwpwqtmmHTqHpprRZQPPZLZWSFRFRB\x0AgzcgscgbfvhRRNZQRRQPvr\x0AJsjhcshCfJgrrpttTCTplH\x0ATvNrvNrJfWWvtJLTHhvZZhQQwVGZZhbV\x0AmFCPmBMPlPsPPBsMFPszbHQJwwHHhbZVQVzjhGHZ\x0AqmlBsdCSmJBmsBBMnMMTDWDNcLrDprSNcWDNrW\x0AHSnHCVqTddFHSVqFqdStSQGQwRzQCzCRzGRRGNPQwz\x0AjhlBpgNvlfZjlfvmpgfgfBrMRRwMMPPLQMZRPMWMMZPQ\x0AhflfpgjfBfDcpchlpvndbHFDdHqSqNVqNVdn\x0AQBfhlVNfHSZHfVCVHSQfZfTCctdvdDTRtjDCtTRsjsvj\x0AbrrWWqzFWzwWbswDchhTRtDhjT\x0AgbrFLnpzqrWPgqpLWrhnHGZlSfLfHfQBGVfHHNVG\x0AhcFmVScmQBVhtcvfHLfvHSnbHRLn\x0AlzQqlDqgpWPvJfRnlNJvww\x0APjCCCPgDgqGzmMtCQstZmBFs\x0AGrnrHrmVVFMFhSSbSfhR\x0AzjTqLtBjjdWdWTLshMZMDbPNRMSSqSPNfD\x0AdTWjdtwWhjWTBzcnrpcwmQpCwcpw\x0ABgtVBsgVVJhgGsSGJbghJqbsjLfZmLjmmtfZndNNZFFZNLdm\x0AMHTlzlwHSvPvzMSPCTMQCNZdjjmnfQjdZfNLjF\x0AHMDTwPDpzrTzpScBghDbVqRBgRBJsR\x0AqjCsTmrrnnCmhcFrCjqmThRlbHGvJGvvvbRbbJRcQJRG\x0AfVBBTfMdSZLNZgPdgglGRdbtbtJRllJWJtWb\x0ATSZZSpNMPBLgpZLVgppBDFhzDmjrnzhjssFqDhzFnn\x0AMDtDMWmMQmdzmMMqvlGfRcjzgpcPPjczPl\x0AsZsHJWNJFJNbWFBhFBnnbVclbVVPglfcRggffGGpjl\x0AsrHWLNZZJdSLSdvDMw\x0ABFqsPnsZcgnncggccqsqqpDPtDWPpPNTNSNThrWtSj\x0AdQbfQQJJdwdmFRbJLRJdMrfDWrjpDrrprhDDDDNWWD\x0AQGwdJmCFJZvGsvvncB\x0AGRRNSjrffGTSPrNTffSgcJTwWJZbbZvwvwtVwWVJZv\x0ACMcFsqmBQzMzshsBQBQvLWmJVwZtpJLJwJLvwt\x0AqBzChnQlzMcRSnnRRjHGGg\x0AdPPbPWNdTBbDpHPHpNsgzvFlglvHzvSFzCFF\x0AfntqhGhRMhnnnGGCVMRhCVlSjswFvvjzjSzvQVSgsl\x0AMMqqJJRCnMhZLCRhtPNrpZPDDWTDTrNBmD\x0AVjVGNTNlNchVjNGRWrSWWtZtRrzncR\x0ABTbbbwDmCDLTbDwfHmzZMmRrWtzPrZSZtrrz\x0AqDLLqvwLBsfBbBdQFQTJhqThVTQJ\x0AqBqPBGZflhrWznzZZdsnzv\x0AFmHRcCCsCDwDbjtzdjWbdz\x0AcTRwCCNHFNmwRgmFTNCFTJqqfqPJsPhPBlsrsfGf\x0AJTNhhNrCTcWpJJcpWw\x0ALLdLsfMsdStbtggLbnTpwfWDzpjvnnjzcz\x0AMqSZsgbMbGFbZtgTSZSFSLhhmHlBQlmrmrPHHCPPZPBr\x0AGgjjgpGvpJJtjgvPrJttsLjVwCsQsQNLsfLfMVCl\x0ARddqZqzcZdSWcHdcqQfQLMwVflfNQNMQ\x0AFncWTRcFlHWFmcFTgPJhGvDgpnnhhGtG\x0AZGPFJsPQCbZCCbgz\x0AnrvrnGWTwwqTBRcpCRRg\x0ADnGWDldNmSLSMdMQ\x0AScDmPPPmjmjjWgtdSmdmCnNqVQVVrNRTZTQTQDHHZGNH\x0AwbbMhLvMJpRwJQrJGHqQGrQHqr\x0AwzhspwpppswsMFLmtnzjdcmdPRWPtS\x0AfPlLTtBlTjDbWcTMJcncWqss\x0ALdvLrLpCRRQQmvhhVNpwRMWJZcFMZWJwJFFFwZsGcs\x0AprrRVpvvRVNmRvvzHjHPlzPLSffbbPHS\x0AbbCbzsQbBzbBFbFzFfJHfVJPfVPtzZttpm\x0AhwvrjDDwjcDcvdnNvwdnwwDPpNtNMVtPpJpRmVMPfmtVZR\x0AmmqDWjhcqhwvDDdTsSGGCbQGSBBLTGGl\x0AwthtwrBQhhSrqJJVLMRPPtJLPF\x0AvbmbZqfqgsfHmcllmLLJNLJMNFJNNvPGJn\x0AjHlDscllClCCgbZzhWqBzBQzprWCqS\x0ADwpDlwDwllhJwbDFNDwFPhDnQnZZzVVnnBrtNznzSSzZrr\x0AMHPfWRTgWzTQmSTTZt\x0AGdPjHLRMCfcGvwqDGbFq\x0ANGdNpDPdNGLppLpwSNFFFDLwnnZbMnrHlHZQcHbcnHQcPcQM\x0AjBgBsjssgjWJVGhBfhvJVnMlbnZQVrrrlHCcCZrl\x0AsRBgvRffhhtvtBgvjgttWBJTLmFLLwdwzFdqLDDDqFGdLFTd\x0ARBzRGRGBgnrPJrRGGWWbDggZTSTVZVFFSVZZdw\x0AtfmLhjfshNNsqpppfjHdwVdQZbVbQFVVTmSVDV\x0AjvqtwHqCNLNsNhNfjssLCzGJWcBRJRBCBBBrrWnGrG\x0AcGDBdNFdNdDStNtGdGQGscDMvZjjZWMvMLjsjjLZjLsJLv\x0AfbRnRzHVPClfRlbbmfHRlPvZvMLpqjvZJqZMpzMpZjBZ\x0AgfbfBgCHCPVNhNGgTtFDcF\x0AljjvLZvvllFnlLJLJjLWFQrVssFpsGMFpNMGsr\x0AqbHSqHTcHChqCmTSRqqBVpVdBQsVQQGHdMprWV\x0ADbtcCqRhhTRmDnPMlLgfgztlZZ\x0AQtMQzPZcbtGgTtLvtf\x0AHwcDsdVVDnNSGLhwvffJvfTT\x0ACSsdSHNmSDHcCqqcrrzQcC\x0AnDNDfmMnmDJRNfJJdMDRBdwjcTtsSHvBTswTjwLtsCts\x0AQcbQrZZggGWVVWbZZjStswCSCCttGCwLvC\x0AZgZgbzVglVbchVVrVhFWWpnnpNJmJMqDfMJnMRqNDDMD\x0AWMfNvsjWGjsqFjqTRRQVJztDzVmJHbft\x0AZPhplcrLrmzQGzmz\x0AZPddLPlcSclhZChndMvgTjjWNGWMGWBj\x0AnDLjMchghDcljfjffpfsqTmGCTGszGZVVzHV\x0AwdFJPFrQRwSNbjVQCTGsHZHmHCHs\x0ABRJJSddvdBrJwrBRNRFRSPRjvclLpWhpglgWpLplltnMgh\x0ABbVRzMcpbMNMHMTJmWdljdlJjT\x0AGtsqFnfvGSFqGfQvgnWWZlLlLjZWtWldPmlT\x0AsSsFqsqsGghwQQmfGRHbbVczbwwBpBpHcw\x0ABBFCBJCsGJBBgvgsvTlVhgNg\x0AZnLdjRQddLRnZrlScHRVTTSHhRvg\x0AfnnjZLWdrnqdWrrPLddqVqBzGDJJFGCBDfJmbDzFMbmB\x0A"), false), HEX3Aanonymous_469762055);
    Label1: do {
      var lineSet_469762204 = [];
      var colontmp__469762402 = [];
      colontmp__469762402 = distribute_469762084(lines_469762080, chckRange(((HEX2F_33557575((lines_469762080).length, 3)) | 0), 1, 2147483647), true);
      var i_469762404 = 0;
      var L_469762405 = (colontmp__469762402).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762404 < L_469762405)) break Label3;
            lineSet_469762204 = colontmp__469762402[chckIndx(i_469762404, 0, (colontmp__469762402).length - 1)];
            var line1_469762205 = nimCopy(null, lineSet_469762204[chckIndx(0, 0, (lineSet_469762204).length - 1)], NTI33554439);
            var line2_469762206 = nimCopy(null, lineSet_469762204[chckIndx(1, 0, (lineSet_469762204).length - 1)], NTI33554439);
            var line3_469762207 = nimCopy(null, lineSet_469762204[chckIndx(2, 0, (lineSet_469762204).length - 1)], NTI33554439);
            Label4: do {
              var iHEX60gensym7_469762272 = 0;
              var resultHEX60gensym7_469762281 = newSeq_469762273(chckRange((line1_469762205).length, 0, 2147483647));
              Label5: do {
                var itHEX60gensym7_469762282 = 0;
                var i_469762399 = 0;
                var L_469762400 = (line1_469762205).length;
                Label6: do {
                    Label7: while (true) {
                    if (!(i_469762399 < L_469762400)) break Label7;
                      itHEX60gensym7_469762282 = line1_469762205[chckIndx(i_469762399, 0, (line1_469762205).length - 1)];
                      resultHEX60gensym7_469762281[chckIndx(iHEX60gensym7_469762272, 0, (resultHEX60gensym7_469762281).length - 1)] = itHEX60gensym7_469762282;
                      iHEX60gensym7_469762272 = addInt(iHEX60gensym7_469762272, 1);
                      i_469762399 = addInt(i_469762399, 1);
                      if (!(((line1_469762205).length == L_469762400))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
            } while (false);
            var badge_469762351 = (Temporary8 = filter_469762330(resultHEX60gensym7_469762281, HEX3Aanonymous_469762287), Temporary8)[chckIndx(0, 0, (Temporary8).length - 1)];
            if ((97 <= ((badge_469762351) | 0))) {
            Temporary9 = addInt(subInt(((badge_469762351) | 0), 97), 1);
            }
            else {
            Temporary9 = addInt(subInt(((badge_469762351) | 0), 65), 27);
            }
            
            var prio_469762352 = Temporary9;
            res_469762054 = addInt(res_469762054, prio_469762352);
            i_469762404 = addInt(i_469762404, 1);
            if (!(((colontmp__469762402).length == L_469762405))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    result_469762052 = nimCopy(null, nsuIntToStr(res_469762054, 1), NTI33554439);
    break BeforeRet;
  } while (false);

  return result_469762052;

}

function js_run03_2() {
  var result_469762394 = null;

  BeforeRet: do {
    result_469762394 = toJSStr(run03_2_469762051());
    break BeforeRet;
  } while (false);

  return result_469762394;

}
